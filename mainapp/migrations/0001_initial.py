# Generated by Django 3.2.13 on 2022-09-16 14:00

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', ckeditor.fields.RichTextField()),
                ('mission', ckeditor.fields.RichTextField()),
                ('vision', ckeditor.fields.RichTextField()),
                ('goal', ckeditor.fields.RichTextField()),
                ('bg', models.ImageField(blank=True, null=True, upload_to='bg_img')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Hour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='HowToUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='how_img')),
                ('how_text', models.TextField()),
                ('how_description', models.TextField(default='how to used')),
            ],
        ),
        migrations.CreateModel(
            name='OurTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='tram_img')),
                ('facebook', models.CharField(blank=True, max_length=256, null=True)),
                ('twitter', models.CharField(blank=True, max_length=256, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=256, null=True)),
                ('instagram', models.CharField(blank=True, max_length=256, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_policy', ckeditor.fields.RichTextField()),
                ('terms', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('national ID', 'National ID Card'), ('others', 'Others')], default='national ID', max_length=50)),
                ('number', models.CharField(max_length=50)),
                ('photo_back', models.ImageField(upload_to='verifi')),
                ('photo_front', models.ImageField(upload_to='verifi')),
                ('is_verified', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('complete', 'complete'), ('in progress', 'in progress'), ('canceled', 'canceled')], max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge', models.CharField(blank=True, choices=[('Week', 'Weekly'), ('Month', 'Monthly'), ('Hour', 'Hourly')], max_length=30, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_category', to='category.category')),
                ('subcategory', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='category', chained_model_field='category', on_delete=django.db.models.deletion.CASCADE, related_name='user_subcategory', to='category.subcategory')),
                ('subject', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='subcategory', chained_model_field='subcategory', on_delete=django.db.models.deletion.CASCADE, related_name='user_subject', to='category.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.CharField(blank=True, max_length=256, null=True)),
                ('instagram', models.CharField(blank=True, max_length=256, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=256, null=True)),
                ('website', models.CharField(blank=True, max_length=256, null=True)),
                ('youtube', models.CharField(blank=True, max_length=256, null=True)),
                ('github', models.CharField(blank=True, max_length=256, null=True)),
                ('twitter', models.CharField(blank=True, max_length=256, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(blank=True, max_length=100, null=True)),
                ('account_type', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('charge', models.CharField(blank=True, max_length=50, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.category')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.region')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.subcategory')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.subject')),
                ('town', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.town')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=200)),
                ('certificate', models.CharField(max_length=200)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('still_studying', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileViewed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('viewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_view', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePersonal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(blank=True, choices=[('tutor', 'tutor'), ('learner', 'learner'), ('parent', 'parent')], max_length=10, null=True)),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr'), ('mrs', 'Mrs'), ('miss', 'Miss'), ('ms', 'Ms'), ('dr', 'Dr'), ('prof', 'Prof')], max_length=10, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=15, null=True)),
                ('show_whatsapp_number', models.BooleanField(default=True)),
                ('online_lesson', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('level_of_education', models.CharField(blank=True, choices=[('Bachelor Degree(Bacc+3)', 'Bachelor Degree'), ('Master Degree(Bacc +5)', 'Master Degree'), ('Advanced Level(Bacc)', 'Advanced Level'), ('Doctorate', 'Doctorate'), ('HND', 'HND'), ('Others', 'Others')], max_length=50, null=True)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('paid', models.BooleanField(default=False)),
                ('profile_pic', models.ImageField(default='default.png', upload_to='profile_img')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='location.country')),
                ('favourite', models.ManyToManyField(blank=True, related_name='saved_user', to=settings.AUTH_USER_MODEL)),
                ('region', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='country', chained_model_field='country', null=True, on_delete=django.db.models.deletion.CASCADE, to='location.region')),
                ('town', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='region', chained_model_field='region', null=True, on_delete=django.db.models.deletion.CASCADE, to='location.town')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('English', 'English'), ('French', 'French'), ('Bilingual', 'Bilingual')], max_length=30)),
                ('bio', models.TextField(blank=True, null=True)),
                ('charge', models.CharField(blank=True, choices=[('Week', 'Weekly'), ('Month', 'Monthly'), ('Hour', 'Hourly')], max_length=30, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_category', to='category.category')),
                ('subcategory', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='category', chained_model_field='category', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_subcategory', to='category.subcategory')),
                ('subject', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='subcategory', chained_model_field='subcategory', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_subject', to='category.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_confirm', models.BooleanField(default=False)),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('start', models.DateTimeField(default=django.utils.timezone.now)),
                ('end', models.DateTimeField(default=django.utils.timezone.now)),
                ('mode', models.CharField(choices=[('Video', 'Video'), ('Audio', 'Audio')], max_length=255)),
                ('is_seen', models.BooleanField(default=False)),
                ('is_decline', models.BooleanField(default=False)),
                ('is_cancel', models.BooleanField(default=False)),
                ('is_complete', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tutor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonEscrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('payout', models.BooleanField(default=False)),
                ('refund', models.BooleanField(default=False)),
                ('complete', models.BooleanField(default=False)),
                ('payout_amount', models.IntegerField(default=0)),
                ('payment_method', models.CharField(blank=True, choices=[('MTN Mobile Money', 'MTN Mobile Money'), ('Orange Money', 'Orange Money')], max_length=255, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainapp.onlinelesson')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_post', models.CharField(max_length=500)),
                ('position', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current_job', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('successful', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('escrow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainapp.lessonescrow')),
            ],
        ),
        migrations.CreateModel(
            name='BillingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing', models.BigIntegerField(blank=True, null=True)),
                ('payment', models.BigIntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.day')),
                ('hour', models.ManyToManyField(to='mainapp.Hour')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earn', models.IntegerField(default=0)),
                ('spend', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
